// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: artical.proto

package articaldemo

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode    int64  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode"`
	StatusMessage string `protobuf:"bytes,2,opt,name=statusMessage,proto3" json:"statusMessage"`
}

func (x *Resp) Reset() {
	*x = Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp) ProtoMessage() {}

func (x *Resp) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp.ProtoReflect.Descriptor instead.
func (*Resp) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{0}
}

func (x *Resp) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *Resp) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

type Artical struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID"`
	Author      string `protobuf:"bytes,2,opt,name=author,proto3" json:"author"`
	Title       string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	Text        string `protobuf:"bytes,4,opt,name=text,proto3" json:"text"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description"`
	LikeNum     int32  `protobuf:"varint,6,opt,name=likeNum,proto3" json:"likeNum"`
	StarNum     int32  `protobuf:"varint,7,opt,name=starNum,proto3" json:"starNum"`
	SeenNum     int32  `protobuf:"varint,8,opt,name=seenNum,proto3" json:"seenNum"`
	CreatedAt   string `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt"`
	Cover       string `protobuf:"bytes,10,opt,name=cover,proto3" json:"cover"`
}

func (x *Artical) Reset() {
	*x = Artical{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Artical) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artical) ProtoMessage() {}

func (x *Artical) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artical.ProtoReflect.Descriptor instead.
func (*Artical) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{1}
}

func (x *Artical) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Artical) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Artical) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Artical) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Artical) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Artical) GetLikeNum() int32 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

func (x *Artical) GetStarNum() int32 {
	if x != nil {
		return x.StarNum
	}
	return 0
}

func (x *Artical) GetSeenNum() int32 {
	if x != nil {
		return x.SeenNum
	}
	return 0
}

func (x *Artical) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Artical) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

type CreateArticalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Author      string `protobuf:"bytes,1,opt,name=author,proto3" json:"author"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	Text        string `protobuf:"bytes,3,opt,name=text,proto3" json:"text"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description"`
	Cover       string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover"`
}

func (x *CreateArticalRequest) Reset() {
	*x = CreateArticalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArticalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticalRequest) ProtoMessage() {}

func (x *CreateArticalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticalRequest.ProtoReflect.Descriptor instead.
func (*CreateArticalRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{2}
}

func (x *CreateArticalRequest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CreateArticalRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateArticalRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CreateArticalRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateArticalRequest) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

type CreateArticalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *CreateArticalResponse) Reset() {
	*x = CreateArticalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArticalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticalResponse) ProtoMessage() {}

func (x *CreateArticalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticalResponse.ProtoReflect.Descriptor instead.
func (*CreateArticalResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{3}
}

func (x *CreateArticalResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type DeleteArticalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID"`
}

func (x *DeleteArticalRequest) Reset() {
	*x = DeleteArticalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteArticalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArticalRequest) ProtoMessage() {}

func (x *DeleteArticalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArticalRequest.ProtoReflect.Descriptor instead.
func (*DeleteArticalRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteArticalRequest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type DeleteArticalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *DeleteArticalResponse) Reset() {
	*x = DeleteArticalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteArticalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArticalResponse) ProtoMessage() {}

func (x *DeleteArticalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArticalResponse.ProtoReflect.Descriptor instead.
func (*DeleteArticalResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteArticalResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type UpdateArticalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticalID   int32  `protobuf:"varint,1,opt,name=articalID,proto3" json:"articalID"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	Text        string `protobuf:"bytes,3,opt,name=text,proto3" json:"text"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description"`
	Cover       string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover"`
}

func (x *UpdateArticalRequest) Reset() {
	*x = UpdateArticalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArticalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArticalRequest) ProtoMessage() {}

func (x *UpdateArticalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArticalRequest.ProtoReflect.Descriptor instead.
func (*UpdateArticalRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateArticalRequest) GetArticalID() int32 {
	if x != nil {
		return x.ArticalID
	}
	return 0
}

func (x *UpdateArticalRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateArticalRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *UpdateArticalRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateArticalRequest) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

type UpdateArticalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *UpdateArticalResponse) Reset() {
	*x = UpdateArticalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArticalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArticalResponse) ProtoMessage() {}

func (x *UpdateArticalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArticalResponse.ProtoReflect.Descriptor instead.
func (*UpdateArticalResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateArticalResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type QueryArticalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDs []int32 `protobuf:"varint,1,rep,packed,name=IDs,proto3" json:"IDs"`
}

func (x *QueryArticalRequest) Reset() {
	*x = QueryArticalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArticalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArticalRequest) ProtoMessage() {}

func (x *QueryArticalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArticalRequest.ProtoReflect.Descriptor instead.
func (*QueryArticalRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{8}
}

func (x *QueryArticalRequest) GetIDs() []int32 {
	if x != nil {
		return x.IDs
	}
	return nil
}

type QueryArticalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp    *Resp      `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
	Artical []*Artical `protobuf:"bytes,2,rep,name=artical,proto3" json:"artical"`
}

func (x *QueryArticalResponse) Reset() {
	*x = QueryArticalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArticalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArticalResponse) ProtoMessage() {}

func (x *QueryArticalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArticalResponse.ProtoReflect.Descriptor instead.
func (*QueryArticalResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{9}
}

func (x *QueryArticalResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *QueryArticalResponse) GetArtical() []*Artical {
	if x != nil {
		return x.Artical
	}
	return nil
}

type QueryArticalByAuthorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Author string `protobuf:"bytes,1,opt,name=author,proto3" json:"author"`
	Field  string `protobuf:"bytes,2,opt,name=field,proto3" json:"field"`
	Order  string `protobuf:"bytes,3,opt,name=order,proto3" json:"order"`
}

func (x *QueryArticalByAuthorRequest) Reset() {
	*x = QueryArticalByAuthorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArticalByAuthorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArticalByAuthorRequest) ProtoMessage() {}

func (x *QueryArticalByAuthorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArticalByAuthorRequest.ProtoReflect.Descriptor instead.
func (*QueryArticalByAuthorRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{10}
}

func (x *QueryArticalByAuthorRequest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *QueryArticalByAuthorRequest) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *QueryArticalByAuthorRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

type QueryArticalByAuthorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp   `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
	IDs  []int32 `protobuf:"varint,2,rep,packed,name=IDs,proto3" json:"IDs"`
}

func (x *QueryArticalByAuthorResponse) Reset() {
	*x = QueryArticalByAuthorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryArticalByAuthorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArticalByAuthorResponse) ProtoMessage() {}

func (x *QueryArticalByAuthorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArticalByAuthorResponse.ProtoReflect.Descriptor instead.
func (*QueryArticalByAuthorResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{11}
}

func (x *QueryArticalByAuthorResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *QueryArticalByAuthorResponse) GetIDs() []int32 {
	if x != nil {
		return x.IDs
	}
	return nil
}

type CreateLikeStarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName  string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName"`
	ArticalID int32  `protobuf:"varint,2,opt,name=articalID,proto3" json:"articalID"`
	Type      int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
}

func (x *CreateLikeStarRequest) Reset() {
	*x = CreateLikeStarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLikeStarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLikeStarRequest) ProtoMessage() {}

func (x *CreateLikeStarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLikeStarRequest.ProtoReflect.Descriptor instead.
func (*CreateLikeStarRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{12}
}

func (x *CreateLikeStarRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CreateLikeStarRequest) GetArticalID() int32 {
	if x != nil {
		return x.ArticalID
	}
	return 0
}

func (x *CreateLikeStarRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type CreateLikeStarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *CreateLikeStarResponse) Reset() {
	*x = CreateLikeStarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLikeStarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLikeStarResponse) ProtoMessage() {}

func (x *CreateLikeStarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLikeStarResponse.ProtoReflect.Descriptor instead.
func (*CreateLikeStarResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{13}
}

func (x *CreateLikeStarResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type DeleteLikeStarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName  string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName"`
	ArticalID int32  `protobuf:"varint,2,opt,name=articalID,proto3" json:"articalID"`
	Type      int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
}

func (x *DeleteLikeStarRequest) Reset() {
	*x = DeleteLikeStarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLikeStarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLikeStarRequest) ProtoMessage() {}

func (x *DeleteLikeStarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLikeStarRequest.ProtoReflect.Descriptor instead.
func (*DeleteLikeStarRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteLikeStarRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *DeleteLikeStarRequest) GetArticalID() int32 {
	if x != nil {
		return x.ArticalID
	}
	return 0
}

func (x *DeleteLikeStarRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type DeleteLikeStarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *DeleteLikeStarResponse) Reset() {
	*x = DeleteLikeStarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLikeStarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLikeStarResponse) ProtoMessage() {}

func (x *DeleteLikeStarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLikeStarResponse.ProtoReflect.Descriptor instead.
func (*DeleteLikeStarResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteLikeStarResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type LikeStar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName  string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName"`
	ArticalID int32  `protobuf:"varint,2,opt,name=articalID,proto3" json:"articalID"`
	UpdatedAt string `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt"`
}

func (x *LikeStar) Reset() {
	*x = LikeStar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeStar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeStar) ProtoMessage() {}

func (x *LikeStar) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeStar.ProtoReflect.Descriptor instead.
func (*LikeStar) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{16}
}

func (x *LikeStar) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LikeStar) GetArticalID() int32 {
	if x != nil {
		return x.ArticalID
	}
	return 0
}

func (x *LikeStar) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type UpdateLikeStarTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Likestar   *LikeStar            `protobuf:"bytes,1,opt,name=likestar,proto3" json:"likestar"`
	UpdateTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=updateTime,proto3" json:"updateTime"`
	Type       int32                `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
}

func (x *UpdateLikeStarTimeRequest) Reset() {
	*x = UpdateLikeStarTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLikeStarTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLikeStarTimeRequest) ProtoMessage() {}

func (x *UpdateLikeStarTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLikeStarTimeRequest.ProtoReflect.Descriptor instead.
func (*UpdateLikeStarTimeRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateLikeStarTimeRequest) GetLikestar() *LikeStar {
	if x != nil {
		return x.Likestar
	}
	return nil
}

func (x *UpdateLikeStarTimeRequest) GetUpdateTime() *timestamp.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *UpdateLikeStarTimeRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type UpdateLikeStarTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *UpdateLikeStarTimeResponse) Reset() {
	*x = UpdateLikeStarTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLikeStarTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLikeStarTimeResponse) ProtoMessage() {}

func (x *UpdateLikeStarTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLikeStarTimeResponse.ProtoReflect.Descriptor instead.
func (*UpdateLikeStarTimeResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateLikeStarTimeResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type QueryLikeStarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName  string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName"`
	ArticalID int32  `protobuf:"varint,2,opt,name=articalID,proto3" json:"articalID"`
	Type      int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
}

func (x *QueryLikeStarRequest) Reset() {
	*x = QueryLikeStarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLikeStarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLikeStarRequest) ProtoMessage() {}

func (x *QueryLikeStarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLikeStarRequest.ProtoReflect.Descriptor instead.
func (*QueryLikeStarRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{19}
}

func (x *QueryLikeStarRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *QueryLikeStarRequest) GetArticalID() int32 {
	if x != nil {
		return x.ArticalID
	}
	return 0
}

func (x *QueryLikeStarRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type QueryLikeStarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp     *Resp     `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
	LikeStar *LikeStar `protobuf:"bytes,2,opt,name=likeStar,proto3" json:"likeStar"`
}

func (x *QueryLikeStarResponse) Reset() {
	*x = QueryLikeStarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLikeStarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLikeStarResponse) ProtoMessage() {}

func (x *QueryLikeStarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLikeStarResponse.ProtoReflect.Descriptor instead.
func (*QueryLikeStarResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{20}
}

func (x *QueryLikeStarResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *QueryLikeStarResponse) GetLikeStar() *LikeStar {
	if x != nil {
		return x.LikeStar
	}
	return nil
}

type QueryAllLikeStarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName"`
	Type     int32  `protobuf:"varint,2,opt,name=Type,proto3" json:"Type"`
}

func (x *QueryAllLikeStarRequest) Reset() {
	*x = QueryAllLikeStarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllLikeStarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllLikeStarRequest) ProtoMessage() {}

func (x *QueryAllLikeStarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAllLikeStarRequest.ProtoReflect.Descriptor instead.
func (*QueryAllLikeStarRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{21}
}

func (x *QueryAllLikeStarRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *QueryAllLikeStarRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type QueryAllLikeStarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp       *Resp   `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
	ArticalIDs []int32 `protobuf:"varint,2,rep,packed,name=articalIDs,proto3" json:"articalIDs"`
}

func (x *QueryAllLikeStarResponse) Reset() {
	*x = QueryAllLikeStarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllLikeStarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllLikeStarResponse) ProtoMessage() {}

func (x *QueryAllLikeStarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAllLikeStarResponse.ProtoReflect.Descriptor instead.
func (*QueryAllLikeStarResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{22}
}

func (x *QueryAllLikeStarResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *QueryAllLikeStarResponse) GetArticalIDs() []int32 {
	if x != nil {
		return x.ArticalIDs
	}
	return nil
}

type RdbArtical struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID"`
	CreatedAt    string `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt"`
	Title        string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	Author       string `protobuf:"bytes,4,opt,name=author,proto3" json:"author"`
	Text         string `protobuf:"bytes,5,opt,name=text,proto3" json:"text"`
	Description  string `protobuf:"bytes,6,opt,name=description,proto3" json:"description"`
	LikeNum      int32  `protobuf:"varint,7,opt,name=likeNum,proto3" json:"likeNum"`
	StarNum      int32  `protobuf:"varint,8,opt,name=starNum,proto3" json:"starNum"`
	SeenNum      int32  `protobuf:"varint,9,opt,name=seenNum,proto3" json:"seenNum"`
	Cover        string `protobuf:"bytes,10,opt,name=cover,proto3" json:"cover"`
	AuthorAvator string `protobuf:"bytes,11,opt,name=authorAvator,proto3" json:"authorAvator"`
}

func (x *RdbArtical) Reset() {
	*x = RdbArtical{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdbArtical) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdbArtical) ProtoMessage() {}

func (x *RdbArtical) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdbArtical.ProtoReflect.Descriptor instead.
func (*RdbArtical) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{23}
}

func (x *RdbArtical) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *RdbArtical) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *RdbArtical) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RdbArtical) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *RdbArtical) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *RdbArtical) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RdbArtical) GetLikeNum() int32 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

func (x *RdbArtical) GetStarNum() int32 {
	if x != nil {
		return x.StarNum
	}
	return 0
}

func (x *RdbArtical) GetSeenNum() int32 {
	if x != nil {
		return x.SeenNum
	}
	return 0
}

func (x *RdbArtical) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *RdbArtical) GetAuthorAvator() string {
	if x != nil {
		return x.AuthorAvator
	}
	return ""
}

type RdbSetArticalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RdbArtical *RdbArtical `protobuf:"bytes,1,opt,name=rdbArtical,proto3" json:"rdbArtical"`
}

func (x *RdbSetArticalRequest) Reset() {
	*x = RdbSetArticalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdbSetArticalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdbSetArticalRequest) ProtoMessage() {}

func (x *RdbSetArticalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdbSetArticalRequest.ProtoReflect.Descriptor instead.
func (*RdbSetArticalRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{24}
}

func (x *RdbSetArticalRequest) GetRdbArtical() *RdbArtical {
	if x != nil {
		return x.RdbArtical
	}
	return nil
}

type RdbSetArticalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *RdbSetArticalResponse) Reset() {
	*x = RdbSetArticalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdbSetArticalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdbSetArticalResponse) ProtoMessage() {}

func (x *RdbSetArticalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdbSetArticalResponse.ProtoReflect.Descriptor instead.
func (*RdbSetArticalResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{25}
}

func (x *RdbSetArticalResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type RdbDelArticalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID"`
}

func (x *RdbDelArticalRequest) Reset() {
	*x = RdbDelArticalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdbDelArticalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdbDelArticalRequest) ProtoMessage() {}

func (x *RdbDelArticalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdbDelArticalRequest.ProtoReflect.Descriptor instead.
func (*RdbDelArticalRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{26}
}

func (x *RdbDelArticalRequest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type RdbDelArticalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *RdbDelArticalResponse) Reset() {
	*x = RdbDelArticalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdbDelArticalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdbDelArticalResponse) ProtoMessage() {}

func (x *RdbDelArticalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdbDelArticalResponse.ProtoReflect.Descriptor instead.
func (*RdbDelArticalResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{27}
}

func (x *RdbDelArticalResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type RdbGetArticalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDs []int32 `protobuf:"varint,1,rep,packed,name=IDs,proto3" json:"IDs"`
}

func (x *RdbGetArticalRequest) Reset() {
	*x = RdbGetArticalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdbGetArticalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdbGetArticalRequest) ProtoMessage() {}

func (x *RdbGetArticalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdbGetArticalRequest.ProtoReflect.Descriptor instead.
func (*RdbGetArticalRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{28}
}

func (x *RdbGetArticalRequest) GetIDs() []int32 {
	if x != nil {
		return x.IDs
	}
	return nil
}

type RdbGetArticalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp        *Resp         `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
	RdbArticals []*RdbArtical `protobuf:"bytes,2,rep,name=rdbArticals,proto3" json:"rdbArticals"`
	Ungot       []int32       `protobuf:"varint,3,rep,packed,name=ungot,proto3" json:"ungot"`
}

func (x *RdbGetArticalResponse) Reset() {
	*x = RdbGetArticalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdbGetArticalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdbGetArticalResponse) ProtoMessage() {}

func (x *RdbGetArticalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdbGetArticalResponse.ProtoReflect.Descriptor instead.
func (*RdbGetArticalResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{29}
}

func (x *RdbGetArticalResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *RdbGetArticalResponse) GetRdbArticals() []*RdbArtical {
	if x != nil {
		return x.RdbArticals
	}
	return nil
}

func (x *RdbGetArticalResponse) GetUngot() []int32 {
	if x != nil {
		return x.Ungot
	}
	return nil
}

type RdbIncreaseitfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticalID int32  `protobuf:"varint,1,opt,name=articalID,proto3" json:"articalID"`
	Val       int32  `protobuf:"varint,2,opt,name=val,proto3" json:"val"`
	Field     string `protobuf:"bytes,3,opt,name=field,proto3" json:"field"`
}

func (x *RdbIncreaseitfRequest) Reset() {
	*x = RdbIncreaseitfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdbIncreaseitfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdbIncreaseitfRequest) ProtoMessage() {}

func (x *RdbIncreaseitfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdbIncreaseitfRequest.ProtoReflect.Descriptor instead.
func (*RdbIncreaseitfRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{30}
}

func (x *RdbIncreaseitfRequest) GetArticalID() int32 {
	if x != nil {
		return x.ArticalID
	}
	return 0
}

func (x *RdbIncreaseitfRequest) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *RdbIncreaseitfRequest) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

type RdbIncreaseitfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *RdbIncreaseitfResponse) Reset() {
	*x = RdbIncreaseitfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdbIncreaseitfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdbIncreaseitfResponse) ProtoMessage() {}

func (x *RdbIncreaseitfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdbIncreaseitfResponse.ProtoReflect.Descriptor instead.
func (*RdbIncreaseitfResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{31}
}

func (x *RdbIncreaseitfResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type CreateStarFolderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName   string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName"`
	FolderName string `protobuf:"bytes,2,opt,name=folderName,proto3" json:"folderName"`
	IsDefault  bool   `protobuf:"varint,3,opt,name=isDefault,proto3" json:"isDefault"`
	Public     int32  `protobuf:"varint,4,opt,name=public,proto3" json:"public"`
}

func (x *CreateStarFolderRequest) Reset() {
	*x = CreateStarFolderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStarFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStarFolderRequest) ProtoMessage() {}

func (x *CreateStarFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStarFolderRequest.ProtoReflect.Descriptor instead.
func (*CreateStarFolderRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{32}
}

func (x *CreateStarFolderRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CreateStarFolderRequest) GetFolderName() string {
	if x != nil {
		return x.FolderName
	}
	return ""
}

func (x *CreateStarFolderRequest) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *CreateStarFolderRequest) GetPublic() int32 {
	if x != nil {
		return x.Public
	}
	return 0
}

type CreateStarFolderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *CreateStarFolderResponse) Reset() {
	*x = CreateStarFolderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStarFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStarFolderResponse) ProtoMessage() {}

func (x *CreateStarFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStarFolderResponse.ProtoReflect.Descriptor instead.
func (*CreateStarFolderResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{33}
}

func (x *CreateStarFolderResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type StarFolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID"`
	CreatedAt  string `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt"`
	FolderName string `protobuf:"bytes,3,opt,name=folderName,proto3" json:"folderName"`
	Username   string `protobuf:"bytes,4,opt,name=username,proto3" json:"username"`
	IsDefault  bool   `protobuf:"varint,5,opt,name=isDefault,proto3" json:"isDefault"`
	Public     int32  `protobuf:"varint,6,opt,name=public,proto3" json:"public"`
}

func (x *StarFolder) Reset() {
	*x = StarFolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StarFolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarFolder) ProtoMessage() {}

func (x *StarFolder) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarFolder.ProtoReflect.Descriptor instead.
func (*StarFolder) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{34}
}

func (x *StarFolder) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *StarFolder) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *StarFolder) GetFolderName() string {
	if x != nil {
		return x.FolderName
	}
	return ""
}

func (x *StarFolder) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *StarFolder) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *StarFolder) GetPublic() int32 {
	if x != nil {
		return x.Public
	}
	return 0
}

type QueryStarFolderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDs []int32 `protobuf:"varint,1,rep,packed,name=IDs,proto3" json:"IDs"`
}

func (x *QueryStarFolderRequest) Reset() {
	*x = QueryStarFolderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStarFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStarFolderRequest) ProtoMessage() {}

func (x *QueryStarFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStarFolderRequest.ProtoReflect.Descriptor instead.
func (*QueryStarFolderRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{35}
}

func (x *QueryStarFolderRequest) GetIDs() []int32 {
	if x != nil {
		return x.IDs
	}
	return nil
}

type QueryStarFolderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp        *Resp         `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
	StarFolders []*StarFolder `protobuf:"bytes,2,rep,name=starFolders,proto3" json:"starFolders"`
}

func (x *QueryStarFolderResponse) Reset() {
	*x = QueryStarFolderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStarFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStarFolderResponse) ProtoMessage() {}

func (x *QueryStarFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStarFolderResponse.ProtoReflect.Descriptor instead.
func (*QueryStarFolderResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{36}
}

func (x *QueryStarFolderResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *QueryStarFolderResponse) GetStarFolders() []*StarFolder {
	if x != nil {
		return x.StarFolders
	}
	return nil
}

type QueryAllStarFolderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName"`
}

func (x *QueryAllStarFolderRequest) Reset() {
	*x = QueryAllStarFolderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllStarFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllStarFolderRequest) ProtoMessage() {}

func (x *QueryAllStarFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAllStarFolderRequest.ProtoReflect.Descriptor instead.
func (*QueryAllStarFolderRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{37}
}

func (x *QueryAllStarFolderRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type QueryAllStarFolderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp        *Resp         `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
	StarFolders []*StarFolder `protobuf:"bytes,2,rep,name=starFolders,proto3" json:"starFolders"`
}

func (x *QueryAllStarFolderResponse) Reset() {
	*x = QueryAllStarFolderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllStarFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllStarFolderResponse) ProtoMessage() {}

func (x *QueryAllStarFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAllStarFolderResponse.ProtoReflect.Descriptor instead.
func (*QueryAllStarFolderResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{38}
}

func (x *QueryAllStarFolderResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *QueryAllStarFolderResponse) GetStarFolders() []*StarFolder {
	if x != nil {
		return x.StarFolders
	}
	return nil
}

type DeleteStarFolderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID"`
}

func (x *DeleteStarFolderRequest) Reset() {
	*x = DeleteStarFolderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStarFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStarFolderRequest) ProtoMessage() {}

func (x *DeleteStarFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStarFolderRequest.ProtoReflect.Descriptor instead.
func (*DeleteStarFolderRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteStarFolderRequest) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type DeleteStarFolderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *DeleteStarFolderResponse) Reset() {
	*x = DeleteStarFolderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStarFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStarFolderResponse) ProtoMessage() {}

func (x *DeleteStarFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStarFolderResponse.ProtoReflect.Descriptor instead.
func (*DeleteStarFolderResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteStarFolderResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type UpdateStarFolderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StarFolder *StarFolder `protobuf:"bytes,1,opt,name=starFolder,proto3" json:"starFolder"`
}

func (x *UpdateStarFolderRequest) Reset() {
	*x = UpdateStarFolderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStarFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStarFolderRequest) ProtoMessage() {}

func (x *UpdateStarFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStarFolderRequest.ProtoReflect.Descriptor instead.
func (*UpdateStarFolderRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateStarFolderRequest) GetStarFolder() *StarFolder {
	if x != nil {
		return x.StarFolder
	}
	return nil
}

type UpdateStarFolderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *UpdateStarFolderResponse) Reset() {
	*x = UpdateStarFolderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStarFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStarFolderResponse) ProtoMessage() {}

func (x *UpdateStarFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStarFolderResponse.ProtoReflect.Descriptor instead.
func (*UpdateStarFolderResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateStarFolderResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type Star struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID"`
	CreatedAt string `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt"`
	ArtcalID  int32  `protobuf:"varint,3,opt,name=artcalID,proto3" json:"artcalID"`
}

func (x *Star) Reset() {
	*x = Star{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Star) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Star) ProtoMessage() {}

func (x *Star) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Star.ProtoReflect.Descriptor instead.
func (*Star) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{43}
}

func (x *Star) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Star) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Star) GetArtcalID() int32 {
	if x != nil {
		return x.ArtcalID
	}
	return 0
}

type CreateStarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticalID    int32  `protobuf:"varint,1,opt,name=articalID,proto3" json:"articalID"`
	StarFolderID int32  `protobuf:"varint,2,opt,name=starFolderID,proto3" json:"starFolderID"`
	Username     string `protobuf:"bytes,3,opt,name=username,proto3" json:"username"`
}

func (x *CreateStarRequest) Reset() {
	*x = CreateStarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStarRequest) ProtoMessage() {}

func (x *CreateStarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStarRequest.ProtoReflect.Descriptor instead.
func (*CreateStarRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{44}
}

func (x *CreateStarRequest) GetArticalID() int32 {
	if x != nil {
		return x.ArticalID
	}
	return 0
}

func (x *CreateStarRequest) GetStarFolderID() int32 {
	if x != nil {
		return x.StarFolderID
	}
	return 0
}

func (x *CreateStarRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CreateStarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *CreateStarResponse) Reset() {
	*x = CreateStarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStarResponse) ProtoMessage() {}

func (x *CreateStarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStarResponse.ProtoReflect.Descriptor instead.
func (*CreateStarResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{45}
}

func (x *CreateStarResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type QueryAllStarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StarFolderID int32 `protobuf:"varint,1,opt,name=starFolderID,proto3" json:"starFolderID"`
	Limit        int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	Offset       int32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset"`
}

func (x *QueryAllStarRequest) Reset() {
	*x = QueryAllStarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllStarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllStarRequest) ProtoMessage() {}

func (x *QueryAllStarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAllStarRequest.ProtoReflect.Descriptor instead.
func (*QueryAllStarRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{46}
}

func (x *QueryAllStarRequest) GetStarFolderID() int32 {
	if x != nil {
		return x.StarFolderID
	}
	return 0
}

func (x *QueryAllStarRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *QueryAllStarRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type QueryAllStarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp  *Resp   `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
	Stars []*Star `protobuf:"bytes,2,rep,name=stars,proto3" json:"stars"`
}

func (x *QueryAllStarResponse) Reset() {
	*x = QueryAllStarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllStarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllStarResponse) ProtoMessage() {}

func (x *QueryAllStarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAllStarResponse.ProtoReflect.Descriptor instead.
func (*QueryAllStarResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{47}
}

func (x *QueryAllStarResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *QueryAllStarResponse) GetStars() []*Star {
	if x != nil {
		return x.Stars
	}
	return nil
}

type UpdateStarOwnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username  string `protobuf:"bytes,1,opt,name=username,proto3" json:"username"`
	ArticalID int32  `protobuf:"varint,2,opt,name=articalID,proto3" json:"articalID"`
	OwnerID   int32  `protobuf:"varint,3,opt,name=ownerID,proto3" json:"ownerID"`
}

func (x *UpdateStarOwnerRequest) Reset() {
	*x = UpdateStarOwnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStarOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStarOwnerRequest) ProtoMessage() {}

func (x *UpdateStarOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStarOwnerRequest.ProtoReflect.Descriptor instead.
func (*UpdateStarOwnerRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateStarOwnerRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateStarOwnerRequest) GetArticalID() int32 {
	if x != nil {
		return x.ArticalID
	}
	return 0
}

func (x *UpdateStarOwnerRequest) GetOwnerID() int32 {
	if x != nil {
		return x.OwnerID
	}
	return 0
}

type UpdateStarOwnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *UpdateStarOwnerResponse) Reset() {
	*x = UpdateStarOwnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStarOwnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStarOwnerResponse) ProtoMessage() {}

func (x *UpdateStarOwnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStarOwnerResponse.ProtoReflect.Descriptor instead.
func (*UpdateStarOwnerResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{49}
}

func (x *UpdateStarOwnerResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type DeleteStarFolderAndMoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username     string `protobuf:"bytes,1,opt,name=username,proto3" json:"username"`
	StarFolderID int32  `protobuf:"varint,2,opt,name=starFolderID,proto3" json:"starFolderID"`
}

func (x *DeleteStarFolderAndMoveRequest) Reset() {
	*x = DeleteStarFolderAndMoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStarFolderAndMoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStarFolderAndMoveRequest) ProtoMessage() {}

func (x *DeleteStarFolderAndMoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStarFolderAndMoveRequest.ProtoReflect.Descriptor instead.
func (*DeleteStarFolderAndMoveRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{50}
}

func (x *DeleteStarFolderAndMoveRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DeleteStarFolderAndMoveRequest) GetStarFolderID() int32 {
	if x != nil {
		return x.StarFolderID
	}
	return 0
}

type DeleteStarFolderAndMoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *DeleteStarFolderAndMoveResponse) Reset() {
	*x = DeleteStarFolderAndMoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStarFolderAndMoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStarFolderAndMoveResponse) ProtoMessage() {}

func (x *DeleteStarFolderAndMoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStarFolderAndMoveResponse.ProtoReflect.Descriptor instead.
func (*DeleteStarFolderAndMoveResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{51}
}

func (x *DeleteStarFolderAndMoveResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type RdbSetLikeStarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName  string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName"`
	ArticalID int32  `protobuf:"varint,2,opt,name=articalID,proto3" json:"articalID"`
	Type      int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
	UpdatedAt string `protobuf:"bytes,4,opt,name=updatedAt,proto3" json:"updatedAt"`
}

func (x *RdbSetLikeStarRequest) Reset() {
	*x = RdbSetLikeStarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdbSetLikeStarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdbSetLikeStarRequest) ProtoMessage() {}

func (x *RdbSetLikeStarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdbSetLikeStarRequest.ProtoReflect.Descriptor instead.
func (*RdbSetLikeStarRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{52}
}

func (x *RdbSetLikeStarRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RdbSetLikeStarRequest) GetArticalID() int32 {
	if x != nil {
		return x.ArticalID
	}
	return 0
}

func (x *RdbSetLikeStarRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RdbSetLikeStarRequest) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type RdbSetLikeStarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *RdbSetLikeStarResponse) Reset() {
	*x = RdbSetLikeStarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdbSetLikeStarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdbSetLikeStarResponse) ProtoMessage() {}

func (x *RdbSetLikeStarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdbSetLikeStarResponse.ProtoReflect.Descriptor instead.
func (*RdbSetLikeStarResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{53}
}

func (x *RdbSetLikeStarResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type RdbGetLikeStarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName  string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName"`
	ArticalID int32  `protobuf:"varint,2,opt,name=articalID,proto3" json:"articalID"`
	Type      int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
}

func (x *RdbGetLikeStarRequest) Reset() {
	*x = RdbGetLikeStarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdbGetLikeStarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdbGetLikeStarRequest) ProtoMessage() {}

func (x *RdbGetLikeStarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdbGetLikeStarRequest.ProtoReflect.Descriptor instead.
func (*RdbGetLikeStarRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{54}
}

func (x *RdbGetLikeStarRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RdbGetLikeStarRequest) GetArticalID() int32 {
	if x != nil {
		return x.ArticalID
	}
	return 0
}

func (x *RdbGetLikeStarRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type RdbGetLikeStarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp  *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
	Exist bool  `protobuf:"varint,2,opt,name=exist,proto3" json:"exist"`
}

func (x *RdbGetLikeStarResponse) Reset() {
	*x = RdbGetLikeStarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdbGetLikeStarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdbGetLikeStarResponse) ProtoMessage() {}

func (x *RdbGetLikeStarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdbGetLikeStarResponse.ProtoReflect.Descriptor instead.
func (*RdbGetLikeStarResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{55}
}

func (x *RdbGetLikeStarResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *RdbGetLikeStarResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

type RdbDelLikeStarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName  string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName"`
	ArticalID int32  `protobuf:"varint,2,opt,name=articalID,proto3" json:"articalID"`
	Type      int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type"`
}

func (x *RdbDelLikeStarRequest) Reset() {
	*x = RdbDelLikeStarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdbDelLikeStarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdbDelLikeStarRequest) ProtoMessage() {}

func (x *RdbDelLikeStarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdbDelLikeStarRequest.ProtoReflect.Descriptor instead.
func (*RdbDelLikeStarRequest) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{56}
}

func (x *RdbDelLikeStarRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RdbDelLikeStarRequest) GetArticalID() int32 {
	if x != nil {
		return x.ArticalID
	}
	return 0
}

func (x *RdbDelLikeStarRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type RdbDelLikeStarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *Resp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp"`
}

func (x *RdbDelLikeStarResponse) Reset() {
	*x = RdbDelLikeStarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_artical_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdbDelLikeStarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdbDelLikeStarResponse) ProtoMessage() {}

func (x *RdbDelLikeStarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artical_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdbDelLikeStarResponse.ProtoReflect.Descriptor instead.
func (*RdbDelLikeStarResponse) Descriptor() ([]byte, []int) {
	return file_artical_proto_rawDescGZIP(), []int{57}
}

func (x *RdbDelLikeStarResponse) GetResp() *Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

var File_artical_proto protoreflect.FileDescriptor

var file_artical_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4c, 0x0a,
	0x04, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xff, 0x01, 0x0a, 0x07,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6c,
	0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x69,
	0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x4e, 0x75, 0x6d,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x65, 0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x90, 0x01,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x22, 0x3e, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70,
	0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x22, 0x3e, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0x96, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x22, 0x3e, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73,
	0x70, 0x22, 0x27, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x49, 0x44, 0x73, 0x22, 0x6d, 0x0a, 0x14, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x07, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x22, 0x61, 0x0a, 0x1b, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x1c,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x42, 0x79, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04,
	0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72,
	0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x03, 0x49, 0x44, 0x73, 0x22, 0x65, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3f, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65,
	0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0x65, 0x0a,
	0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x3f, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69,
	0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0x62, 0x0a, 0x08, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9e, 0x01, 0x0a, 0x19, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x6c, 0x69, 0x6b, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x52, 0x08, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x74, 0x61, 0x72, 0x12, 0x3a, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x43, 0x0a, 0x1a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x22,
	0x64, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x71, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69,
	0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x04, 0x72, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x08, 0x6c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x08,
	0x6c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x22, 0x49, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x61, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x4c,
	0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x49, 0x44, 0x73, 0x22, 0xa6, 0x02, 0x0a, 0x0a, 0x52, 0x64, 0x62, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x6b, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x69, 0x6b, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65,
	0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x41, 0x76, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x41, 0x76, 0x61, 0x74, 0x6f, 0x72, 0x22,
	0x4f, 0x0a, 0x14, 0x52, 0x64, 0x62, 0x53, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x72, 0x64, 0x62, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x64, 0x62, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x52, 0x0a, 0x72, 0x64, 0x62, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x22, 0x3e, 0x0a, 0x15, 0x52, 0x64, 0x62, 0x53, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70,
	0x22, 0x26, 0x0a, 0x14, 0x52, 0x64, 0x62, 0x44, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x22, 0x3e, 0x0a, 0x15, 0x52, 0x64, 0x62, 0x44,
	0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0x28, 0x0a, 0x14, 0x52, 0x64, 0x62, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x49,
	0x44, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x52, 0x64, 0x62, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04,
	0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72,
	0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0b, 0x72, 0x64, 0x62, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x64, 0x62, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x0b, 0x72, 0x64, 0x62, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x75, 0x6e, 0x67, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x75,
	0x6e, 0x67, 0x6f, 0x74, 0x22, 0x5d, 0x0a, 0x15, 0x52, 0x64, 0x62, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x69, 0x74, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x76,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x22, 0x3f, 0x0a, 0x16, 0x52, 0x64, 0x62, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61,
	0x73, 0x65, 0x69, 0x74, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04,
	0x72, 0x65, 0x73, 0x70, 0x22, 0x8b, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x22, 0x41, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0xac, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x22, 0x2a, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61,
	0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x49, 0x44, 0x73,
	0x22, 0x7b, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65,
	0x73, 0x70, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x22, 0x37, 0x0a,
	0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7e, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x44, 0x22, 0x41, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04,
	0x72, 0x65, 0x73, 0x70, 0x22, 0x52, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x37, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d,
	0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x22, 0x41, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0x50, 0x0a, 0x04, 0x53,
	0x74, 0x61, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x72, 0x74, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x22, 0x71, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x3b, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65,
	0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0x67, 0x0a,
	0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x66, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x04, 0x72, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65,
	0x6d, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x73, 0x22, 0x6c,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x22, 0x40, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64,
	0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0x60,
	0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x41, 0x6e, 0x64, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x48, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x52,
	0x64, 0x62, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x3f, 0x0a, 0x16, 0x52, 0x64, 0x62, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73,
	0x70, 0x22, 0x65, 0x0a, 0x15, 0x52, 0x64, 0x62, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x55, 0x0a, 0x16, 0x52, 0x64, 0x62, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x22,
	0x65, 0x0a, 0x15, 0x52, 0x64, 0x62, 0x44, 0x65, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3f, 0x0a, 0x16, 0x52, 0x64, 0x62, 0x44, 0x65, 0x6c,
	0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x32, 0xed, 0x11, 0x0a, 0x0e, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x21, 0x2e, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x21, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64,
	0x65, 0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12,
	0x21, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x20, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6d, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x42,
	0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x28, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x42, 0x79, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57,
	0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x45, 0x78,
	0x12, 0x20, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x22, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69,
	0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x22, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6b, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x58, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x12, 0x21, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64,
	0x65, 0x6d, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12,
	0x24, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64,
	0x65, 0x6d, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x4c, 0x69, 0x6b, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x61, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x4d, 0x6f, 0x76, 0x65,
	0x12, 0x2b, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41,
	0x6e, 0x64, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x4d,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x12, 0x24, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5e, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d,
	0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x72,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x67, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x12, 0x20, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5e, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d,
	0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x58, 0x0a, 0x0d, 0x52, 0x64, 0x62, 0x53, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x12, 0x21, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x52, 0x64, 0x62, 0x53, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65,
	0x6d, 0x6f, 0x2e, 0x52, 0x64, 0x62, 0x53, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x52, 0x64,
	0x62, 0x44, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x21, 0x2e, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x64, 0x62, 0x44, 0x65, 0x6c,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x64, 0x62,
	0x44, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x52, 0x64, 0x62, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x21, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64,
	0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x64, 0x62, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x64, 0x62, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a,
	0x0a, 0x0f, 0x52, 0x64, 0x62, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x45,
	0x78, 0x12, 0x21, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x52, 0x64, 0x62, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65,
	0x6d, 0x6f, 0x2e, 0x52, 0x64, 0x62, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x52, 0x64,
	0x62, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x69, 0x74, 0x66, 0x12, 0x22, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52, 0x64, 0x62, 0x49, 0x6e,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x69, 0x74, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x52,
	0x64, 0x62, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x69, 0x74, 0x66, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x3b, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x6d, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_artical_proto_rawDescOnce sync.Once
	file_artical_proto_rawDescData = file_artical_proto_rawDesc
)

func file_artical_proto_rawDescGZIP() []byte {
	file_artical_proto_rawDescOnce.Do(func() {
		file_artical_proto_rawDescData = protoimpl.X.CompressGZIP(file_artical_proto_rawDescData)
	})
	return file_artical_proto_rawDescData
}

var file_artical_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_artical_proto_goTypes = []interface{}{
	(*Resp)(nil),                            // 0: articaldemo.Resp
	(*Artical)(nil),                         // 1: articaldemo.Artical
	(*CreateArticalRequest)(nil),            // 2: articaldemo.CreateArticalRequest
	(*CreateArticalResponse)(nil),           // 3: articaldemo.CreateArticalResponse
	(*DeleteArticalRequest)(nil),            // 4: articaldemo.DeleteArticalRequest
	(*DeleteArticalResponse)(nil),           // 5: articaldemo.DeleteArticalResponse
	(*UpdateArticalRequest)(nil),            // 6: articaldemo.UpdateArticalRequest
	(*UpdateArticalResponse)(nil),           // 7: articaldemo.UpdateArticalResponse
	(*QueryArticalRequest)(nil),             // 8: articaldemo.QueryArticalRequest
	(*QueryArticalResponse)(nil),            // 9: articaldemo.QueryArticalResponse
	(*QueryArticalByAuthorRequest)(nil),     // 10: articaldemo.QueryArticalByAuthorRequest
	(*QueryArticalByAuthorResponse)(nil),    // 11: articaldemo.QueryArticalByAuthorResponse
	(*CreateLikeStarRequest)(nil),           // 12: articaldemo.CreateLikeStarRequest
	(*CreateLikeStarResponse)(nil),          // 13: articaldemo.CreateLikeStarResponse
	(*DeleteLikeStarRequest)(nil),           // 14: articaldemo.DeleteLikeStarRequest
	(*DeleteLikeStarResponse)(nil),          // 15: articaldemo.DeleteLikeStarResponse
	(*LikeStar)(nil),                        // 16: articaldemo.LikeStar
	(*UpdateLikeStarTimeRequest)(nil),       // 17: articaldemo.UpdateLikeStarTimeRequest
	(*UpdateLikeStarTimeResponse)(nil),      // 18: articaldemo.UpdateLikeStarTimeResponse
	(*QueryLikeStarRequest)(nil),            // 19: articaldemo.QueryLikeStarRequest
	(*QueryLikeStarResponse)(nil),           // 20: articaldemo.QueryLikeStarResponse
	(*QueryAllLikeStarRequest)(nil),         // 21: articaldemo.QueryAllLikeStarRequest
	(*QueryAllLikeStarResponse)(nil),        // 22: articaldemo.QueryAllLikeStarResponse
	(*RdbArtical)(nil),                      // 23: articaldemo.RdbArtical
	(*RdbSetArticalRequest)(nil),            // 24: articaldemo.RdbSetArticalRequest
	(*RdbSetArticalResponse)(nil),           // 25: articaldemo.RdbSetArticalResponse
	(*RdbDelArticalRequest)(nil),            // 26: articaldemo.RdbDelArticalRequest
	(*RdbDelArticalResponse)(nil),           // 27: articaldemo.RdbDelArticalResponse
	(*RdbGetArticalRequest)(nil),            // 28: articaldemo.RdbGetArticalRequest
	(*RdbGetArticalResponse)(nil),           // 29: articaldemo.RdbGetArticalResponse
	(*RdbIncreaseitfRequest)(nil),           // 30: articaldemo.RdbIncreaseitfRequest
	(*RdbIncreaseitfResponse)(nil),          // 31: articaldemo.RdbIncreaseitfResponse
	(*CreateStarFolderRequest)(nil),         // 32: articaldemo.CreateStarFolderRequest
	(*CreateStarFolderResponse)(nil),        // 33: articaldemo.CreateStarFolderResponse
	(*StarFolder)(nil),                      // 34: articaldemo.StarFolder
	(*QueryStarFolderRequest)(nil),          // 35: articaldemo.QueryStarFolderRequest
	(*QueryStarFolderResponse)(nil),         // 36: articaldemo.QueryStarFolderResponse
	(*QueryAllStarFolderRequest)(nil),       // 37: articaldemo.QueryAllStarFolderRequest
	(*QueryAllStarFolderResponse)(nil),      // 38: articaldemo.QueryAllStarFolderResponse
	(*DeleteStarFolderRequest)(nil),         // 39: articaldemo.DeleteStarFolderRequest
	(*DeleteStarFolderResponse)(nil),        // 40: articaldemo.DeleteStarFolderResponse
	(*UpdateStarFolderRequest)(nil),         // 41: articaldemo.UpdateStarFolderRequest
	(*UpdateStarFolderResponse)(nil),        // 42: articaldemo.UpdateStarFolderResponse
	(*Star)(nil),                            // 43: articaldemo.Star
	(*CreateStarRequest)(nil),               // 44: articaldemo.CreateStarRequest
	(*CreateStarResponse)(nil),              // 45: articaldemo.CreateStarResponse
	(*QueryAllStarRequest)(nil),             // 46: articaldemo.QueryAllStarRequest
	(*QueryAllStarResponse)(nil),            // 47: articaldemo.QueryAllStarResponse
	(*UpdateStarOwnerRequest)(nil),          // 48: articaldemo.UpdateStarOwnerRequest
	(*UpdateStarOwnerResponse)(nil),         // 49: articaldemo.UpdateStarOwnerResponse
	(*DeleteStarFolderAndMoveRequest)(nil),  // 50: articaldemo.DeleteStarFolderAndMoveRequest
	(*DeleteStarFolderAndMoveResponse)(nil), // 51: articaldemo.DeleteStarFolderAndMoveResponse
	(*RdbSetLikeStarRequest)(nil),           // 52: articaldemo.RdbSetLikeStarRequest
	(*RdbSetLikeStarResponse)(nil),          // 53: articaldemo.RdbSetLikeStarResponse
	(*RdbGetLikeStarRequest)(nil),           // 54: articaldemo.RdbGetLikeStarRequest
	(*RdbGetLikeStarResponse)(nil),          // 55: articaldemo.RdbGetLikeStarResponse
	(*RdbDelLikeStarRequest)(nil),           // 56: articaldemo.RdbDelLikeStarRequest
	(*RdbDelLikeStarResponse)(nil),          // 57: articaldemo.RdbDelLikeStarResponse
	(*timestamp.Timestamp)(nil),             // 58: google.protobuf.Timestamp
}
var file_artical_proto_depIdxs = []int32{
	0,  // 0: articaldemo.CreateArticalResponse.resp:type_name -> articaldemo.Resp
	0,  // 1: articaldemo.DeleteArticalResponse.resp:type_name -> articaldemo.Resp
	0,  // 2: articaldemo.UpdateArticalResponse.resp:type_name -> articaldemo.Resp
	0,  // 3: articaldemo.QueryArticalResponse.resp:type_name -> articaldemo.Resp
	1,  // 4: articaldemo.QueryArticalResponse.artical:type_name -> articaldemo.Artical
	0,  // 5: articaldemo.QueryArticalByAuthorResponse.resp:type_name -> articaldemo.Resp
	0,  // 6: articaldemo.CreateLikeStarResponse.resp:type_name -> articaldemo.Resp
	0,  // 7: articaldemo.DeleteLikeStarResponse.resp:type_name -> articaldemo.Resp
	16, // 8: articaldemo.UpdateLikeStarTimeRequest.likestar:type_name -> articaldemo.LikeStar
	58, // 9: articaldemo.UpdateLikeStarTimeRequest.updateTime:type_name -> google.protobuf.Timestamp
	0,  // 10: articaldemo.UpdateLikeStarTimeResponse.resp:type_name -> articaldemo.Resp
	0,  // 11: articaldemo.QueryLikeStarResponse.resp:type_name -> articaldemo.Resp
	16, // 12: articaldemo.QueryLikeStarResponse.likeStar:type_name -> articaldemo.LikeStar
	0,  // 13: articaldemo.QueryAllLikeStarResponse.resp:type_name -> articaldemo.Resp
	23, // 14: articaldemo.RdbSetArticalRequest.rdbArtical:type_name -> articaldemo.RdbArtical
	0,  // 15: articaldemo.RdbSetArticalResponse.resp:type_name -> articaldemo.Resp
	0,  // 16: articaldemo.RdbDelArticalResponse.resp:type_name -> articaldemo.Resp
	0,  // 17: articaldemo.RdbGetArticalResponse.resp:type_name -> articaldemo.Resp
	23, // 18: articaldemo.RdbGetArticalResponse.rdbArticals:type_name -> articaldemo.RdbArtical
	0,  // 19: articaldemo.RdbIncreaseitfResponse.resp:type_name -> articaldemo.Resp
	0,  // 20: articaldemo.CreateStarFolderResponse.resp:type_name -> articaldemo.Resp
	0,  // 21: articaldemo.QueryStarFolderResponse.resp:type_name -> articaldemo.Resp
	34, // 22: articaldemo.QueryStarFolderResponse.starFolders:type_name -> articaldemo.StarFolder
	0,  // 23: articaldemo.QueryAllStarFolderResponse.resp:type_name -> articaldemo.Resp
	34, // 24: articaldemo.QueryAllStarFolderResponse.starFolders:type_name -> articaldemo.StarFolder
	0,  // 25: articaldemo.DeleteStarFolderResponse.resp:type_name -> articaldemo.Resp
	34, // 26: articaldemo.UpdateStarFolderRequest.starFolder:type_name -> articaldemo.StarFolder
	0,  // 27: articaldemo.UpdateStarFolderResponse.resp:type_name -> articaldemo.Resp
	0,  // 28: articaldemo.CreateStarResponse.resp:type_name -> articaldemo.Resp
	0,  // 29: articaldemo.QueryAllStarResponse.resp:type_name -> articaldemo.Resp
	43, // 30: articaldemo.QueryAllStarResponse.stars:type_name -> articaldemo.Star
	0,  // 31: articaldemo.UpdateStarOwnerResponse.resp:type_name -> articaldemo.Resp
	0,  // 32: articaldemo.DeleteStarFolderAndMoveResponse.resp:type_name -> articaldemo.Resp
	0,  // 33: articaldemo.RdbSetLikeStarResponse.resp:type_name -> articaldemo.Resp
	0,  // 34: articaldemo.RdbGetLikeStarResponse.resp:type_name -> articaldemo.Resp
	0,  // 35: articaldemo.RdbDelLikeStarResponse.resp:type_name -> articaldemo.Resp
	2,  // 36: articaldemo.ArticalService.CreateArtical:input_type -> articaldemo.CreateArticalRequest
	4,  // 37: articaldemo.ArticalService.DeleteArtical:input_type -> articaldemo.DeleteArticalRequest
	6,  // 38: articaldemo.ArticalService.UpdateArtical:input_type -> articaldemo.UpdateArticalRequest
	8,  // 39: articaldemo.ArticalService.QueryArtical:input_type -> articaldemo.QueryArticalRequest
	10, // 40: articaldemo.ArticalService.QueryArticalByAuthor:input_type -> articaldemo.QueryArticalByAuthorRequest
	8,  // 41: articaldemo.ArticalService.QueryArticalEx:input_type -> articaldemo.QueryArticalRequest
	12, // 42: articaldemo.ArticalService.CreateLikeStar:input_type -> articaldemo.CreateLikeStarRequest
	14, // 43: articaldemo.ArticalService.DeleteLikeStar:input_type -> articaldemo.DeleteLikeStarRequest
	19, // 44: articaldemo.ArticalService.QueryLikeStar:input_type -> articaldemo.QueryLikeStarRequest
	21, // 45: articaldemo.ArticalService.QueryAllLikeStar:input_type -> articaldemo.QueryAllLikeStarRequest
	44, // 46: articaldemo.ArticalService.CreateStar:input_type -> articaldemo.CreateStarRequest
	32, // 47: articaldemo.ArticalService.CreateStarFolder:input_type -> articaldemo.CreateStarFolderRequest
	39, // 48: articaldemo.ArticalService.DeleteStarFolder:input_type -> articaldemo.DeleteStarFolderRequest
	50, // 49: articaldemo.ArticalService.DeleteStarFolderAndMove:input_type -> articaldemo.DeleteStarFolderAndMoveRequest
	41, // 50: articaldemo.ArticalService.UpdateStarFolder:input_type -> articaldemo.UpdateStarFolderRequest
	35, // 51: articaldemo.ArticalService.QueryStarFolder:input_type -> articaldemo.QueryStarFolderRequest
	37, // 52: articaldemo.ArticalService.QueryAllStarFolder:input_type -> articaldemo.QueryAllStarFolderRequest
	46, // 53: articaldemo.ArticalService.QueryAllStar:input_type -> articaldemo.QueryAllStarRequest
	48, // 54: articaldemo.ArticalService.UpdateStarOwner:input_type -> articaldemo.UpdateStarOwnerRequest
	24, // 55: articaldemo.ArticalService.RdbSetArtical:input_type -> articaldemo.RdbSetArticalRequest
	26, // 56: articaldemo.ArticalService.RdbDelArtical:input_type -> articaldemo.RdbDelArticalRequest
	28, // 57: articaldemo.ArticalService.RdbGetArtical:input_type -> articaldemo.RdbGetArticalRequest
	28, // 58: articaldemo.ArticalService.RdbGetArticalEx:input_type -> articaldemo.RdbGetArticalRequest
	30, // 59: articaldemo.ArticalService.RdbIncreaseitf:input_type -> articaldemo.RdbIncreaseitfRequest
	3,  // 60: articaldemo.ArticalService.CreateArtical:output_type -> articaldemo.CreateArticalResponse
	5,  // 61: articaldemo.ArticalService.DeleteArtical:output_type -> articaldemo.DeleteArticalResponse
	7,  // 62: articaldemo.ArticalService.UpdateArtical:output_type -> articaldemo.UpdateArticalResponse
	9,  // 63: articaldemo.ArticalService.QueryArtical:output_type -> articaldemo.QueryArticalResponse
	11, // 64: articaldemo.ArticalService.QueryArticalByAuthor:output_type -> articaldemo.QueryArticalByAuthorResponse
	9,  // 65: articaldemo.ArticalService.QueryArticalEx:output_type -> articaldemo.QueryArticalResponse
	13, // 66: articaldemo.ArticalService.CreateLikeStar:output_type -> articaldemo.CreateLikeStarResponse
	15, // 67: articaldemo.ArticalService.DeleteLikeStar:output_type -> articaldemo.DeleteLikeStarResponse
	20, // 68: articaldemo.ArticalService.QueryLikeStar:output_type -> articaldemo.QueryLikeStarResponse
	22, // 69: articaldemo.ArticalService.QueryAllLikeStar:output_type -> articaldemo.QueryAllLikeStarResponse
	45, // 70: articaldemo.ArticalService.CreateStar:output_type -> articaldemo.CreateStarResponse
	33, // 71: articaldemo.ArticalService.CreateStarFolder:output_type -> articaldemo.CreateStarFolderResponse
	40, // 72: articaldemo.ArticalService.DeleteStarFolder:output_type -> articaldemo.DeleteStarFolderResponse
	51, // 73: articaldemo.ArticalService.DeleteStarFolderAndMove:output_type -> articaldemo.DeleteStarFolderAndMoveResponse
	42, // 74: articaldemo.ArticalService.UpdateStarFolder:output_type -> articaldemo.UpdateStarFolderResponse
	36, // 75: articaldemo.ArticalService.QueryStarFolder:output_type -> articaldemo.QueryStarFolderResponse
	38, // 76: articaldemo.ArticalService.QueryAllStarFolder:output_type -> articaldemo.QueryAllStarFolderResponse
	47, // 77: articaldemo.ArticalService.QueryAllStar:output_type -> articaldemo.QueryAllStarResponse
	49, // 78: articaldemo.ArticalService.UpdateStarOwner:output_type -> articaldemo.UpdateStarOwnerResponse
	25, // 79: articaldemo.ArticalService.RdbSetArtical:output_type -> articaldemo.RdbSetArticalResponse
	27, // 80: articaldemo.ArticalService.RdbDelArtical:output_type -> articaldemo.RdbDelArticalResponse
	29, // 81: articaldemo.ArticalService.RdbGetArtical:output_type -> articaldemo.RdbGetArticalResponse
	29, // 82: articaldemo.ArticalService.RdbGetArticalEx:output_type -> articaldemo.RdbGetArticalResponse
	31, // 83: articaldemo.ArticalService.RdbIncreaseitf:output_type -> articaldemo.RdbIncreaseitfResponse
	60, // [60:84] is the sub-list for method output_type
	36, // [36:60] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_artical_proto_init() }
func file_artical_proto_init() {
	if File_artical_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_artical_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Artical); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArticalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArticalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteArticalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteArticalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArticalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArticalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArticalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArticalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArticalByAuthorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryArticalByAuthorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLikeStarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLikeStarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLikeStarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLikeStarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeStar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLikeStarTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLikeStarTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryLikeStarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryLikeStarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllLikeStarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllLikeStarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdbArtical); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdbSetArticalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdbSetArticalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdbDelArticalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdbDelArticalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdbGetArticalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdbGetArticalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdbIncreaseitfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdbIncreaseitfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStarFolderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStarFolderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StarFolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStarFolderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStarFolderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllStarFolderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllStarFolderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStarFolderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStarFolderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStarFolderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStarFolderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Star); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllStarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllStarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStarOwnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStarOwnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStarFolderAndMoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStarFolderAndMoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdbSetLikeStarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdbSetLikeStarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdbGetLikeStarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdbGetLikeStarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdbDelLikeStarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_artical_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdbDelLikeStarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_artical_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_artical_proto_goTypes,
		DependencyIndexes: file_artical_proto_depIdxs,
		MessageInfos:      file_artical_proto_msgTypes,
	}.Build()
	File_artical_proto = out.File
	file_artical_proto_rawDesc = nil
	file_artical_proto_goTypes = nil
	file_artical_proto_depIdxs = nil
}
