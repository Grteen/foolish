// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.6.1
// source: artical.proto

package articaldemo

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ArticalService_CreateArtical_FullMethodName           = "/articaldemo.ArticalService/CreateArtical"
	ArticalService_DeleteArtical_FullMethodName           = "/articaldemo.ArticalService/DeleteArtical"
	ArticalService_UpdateArtical_FullMethodName           = "/articaldemo.ArticalService/UpdateArtical"
	ArticalService_QueryArtical_FullMethodName            = "/articaldemo.ArticalService/QueryArtical"
	ArticalService_QueryArticalByAuthor_FullMethodName    = "/articaldemo.ArticalService/QueryArticalByAuthor"
	ArticalService_QueryArticalEx_FullMethodName          = "/articaldemo.ArticalService/QueryArticalEx"
	ArticalService_CreateLikeStar_FullMethodName          = "/articaldemo.ArticalService/CreateLikeStar"
	ArticalService_DeleteLikeStar_FullMethodName          = "/articaldemo.ArticalService/DeleteLikeStar"
	ArticalService_QueryLikeStar_FullMethodName           = "/articaldemo.ArticalService/QueryLikeStar"
	ArticalService_QueryAllLikeStar_FullMethodName        = "/articaldemo.ArticalService/QueryAllLikeStar"
	ArticalService_CreateStar_FullMethodName              = "/articaldemo.ArticalService/CreateStar"
	ArticalService_CreateStarFolder_FullMethodName        = "/articaldemo.ArticalService/CreateStarFolder"
	ArticalService_DeleteStarFolder_FullMethodName        = "/articaldemo.ArticalService/DeleteStarFolder"
	ArticalService_DeleteStarFolderAndMove_FullMethodName = "/articaldemo.ArticalService/DeleteStarFolderAndMove"
	ArticalService_UpdateStarFolder_FullMethodName        = "/articaldemo.ArticalService/UpdateStarFolder"
	ArticalService_QueryStarFolder_FullMethodName         = "/articaldemo.ArticalService/QueryStarFolder"
	ArticalService_QueryAllStarFolder_FullMethodName      = "/articaldemo.ArticalService/QueryAllStarFolder"
	ArticalService_QueryAllStar_FullMethodName            = "/articaldemo.ArticalService/QueryAllStar"
	ArticalService_UpdateStarOwner_FullMethodName         = "/articaldemo.ArticalService/UpdateStarOwner"
	ArticalService_RdbSetArtical_FullMethodName           = "/articaldemo.ArticalService/RdbSetArtical"
	ArticalService_RdbDelArtical_FullMethodName           = "/articaldemo.ArticalService/RdbDelArtical"
	ArticalService_RdbGetArtical_FullMethodName           = "/articaldemo.ArticalService/RdbGetArtical"
	ArticalService_RdbGetArticalEx_FullMethodName         = "/articaldemo.ArticalService/RdbGetArticalEx"
	ArticalService_RdbIncreaseitf_FullMethodName          = "/articaldemo.ArticalService/RdbIncreaseitf"
)

// ArticalServiceClient is the client API for ArticalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ArticalServiceClient interface {
	CreateArtical(ctx context.Context, in *CreateArticalRequest, opts ...grpc.CallOption) (*CreateArticalResponse, error)
	DeleteArtical(ctx context.Context, in *DeleteArticalRequest, opts ...grpc.CallOption) (*DeleteArticalResponse, error)
	UpdateArtical(ctx context.Context, in *UpdateArticalRequest, opts ...grpc.CallOption) (*UpdateArticalResponse, error)
	QueryArtical(ctx context.Context, in *QueryArticalRequest, opts ...grpc.CallOption) (*QueryArticalResponse, error)
	QueryArticalByAuthor(ctx context.Context, in *QueryArticalByAuthorRequest, opts ...grpc.CallOption) (*QueryArticalByAuthorResponse, error)
	QueryArticalEx(ctx context.Context, in *QueryArticalRequest, opts ...grpc.CallOption) (*QueryArticalResponse, error)
	CreateLikeStar(ctx context.Context, in *CreateLikeStarRequest, opts ...grpc.CallOption) (*CreateLikeStarResponse, error)
	DeleteLikeStar(ctx context.Context, in *DeleteLikeStarRequest, opts ...grpc.CallOption) (*DeleteLikeStarResponse, error)
	QueryLikeStar(ctx context.Context, in *QueryLikeStarRequest, opts ...grpc.CallOption) (*QueryLikeStarResponse, error)
	QueryAllLikeStar(ctx context.Context, in *QueryAllLikeStarRequest, opts ...grpc.CallOption) (*QueryAllLikeStarResponse, error)
	CreateStar(ctx context.Context, in *CreateStarRequest, opts ...grpc.CallOption) (*CreateStarResponse, error)
	CreateStarFolder(ctx context.Context, in *CreateStarFolderRequest, opts ...grpc.CallOption) (*CreateStarFolderResponse, error)
	DeleteStarFolder(ctx context.Context, in *DeleteStarFolderRequest, opts ...grpc.CallOption) (*DeleteStarFolderResponse, error)
	DeleteStarFolderAndMove(ctx context.Context, in *DeleteStarFolderAndMoveRequest, opts ...grpc.CallOption) (*DeleteStarFolderAndMoveResponse, error)
	UpdateStarFolder(ctx context.Context, in *UpdateStarFolderRequest, opts ...grpc.CallOption) (*UpdateStarFolderResponse, error)
	QueryStarFolder(ctx context.Context, in *QueryStarFolderRequest, opts ...grpc.CallOption) (*QueryStarFolderResponse, error)
	QueryAllStarFolder(ctx context.Context, in *QueryAllStarFolderRequest, opts ...grpc.CallOption) (*QueryAllStarFolderResponse, error)
	QueryAllStar(ctx context.Context, in *QueryAllStarRequest, opts ...grpc.CallOption) (*QueryAllStarResponse, error)
	UpdateStarOwner(ctx context.Context, in *UpdateStarOwnerRequest, opts ...grpc.CallOption) (*UpdateStarOwnerResponse, error)
	RdbSetArtical(ctx context.Context, in *RdbSetArticalRequest, opts ...grpc.CallOption) (*RdbSetArticalResponse, error)
	RdbDelArtical(ctx context.Context, in *RdbDelArticalRequest, opts ...grpc.CallOption) (*RdbDelArticalResponse, error)
	RdbGetArtical(ctx context.Context, in *RdbGetArticalRequest, opts ...grpc.CallOption) (*RdbGetArticalResponse, error)
	RdbGetArticalEx(ctx context.Context, in *RdbGetArticalRequest, opts ...grpc.CallOption) (*RdbGetArticalResponse, error)
	RdbIncreaseitf(ctx context.Context, in *RdbIncreaseitfRequest, opts ...grpc.CallOption) (*RdbIncreaseitfResponse, error)
}

type articalServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewArticalServiceClient(cc grpc.ClientConnInterface) ArticalServiceClient {
	return &articalServiceClient{cc}
}

func (c *articalServiceClient) CreateArtical(ctx context.Context, in *CreateArticalRequest, opts ...grpc.CallOption) (*CreateArticalResponse, error) {
	out := new(CreateArticalResponse)
	err := c.cc.Invoke(ctx, ArticalService_CreateArtical_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) DeleteArtical(ctx context.Context, in *DeleteArticalRequest, opts ...grpc.CallOption) (*DeleteArticalResponse, error) {
	out := new(DeleteArticalResponse)
	err := c.cc.Invoke(ctx, ArticalService_DeleteArtical_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) UpdateArtical(ctx context.Context, in *UpdateArticalRequest, opts ...grpc.CallOption) (*UpdateArticalResponse, error) {
	out := new(UpdateArticalResponse)
	err := c.cc.Invoke(ctx, ArticalService_UpdateArtical_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) QueryArtical(ctx context.Context, in *QueryArticalRequest, opts ...grpc.CallOption) (*QueryArticalResponse, error) {
	out := new(QueryArticalResponse)
	err := c.cc.Invoke(ctx, ArticalService_QueryArtical_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) QueryArticalByAuthor(ctx context.Context, in *QueryArticalByAuthorRequest, opts ...grpc.CallOption) (*QueryArticalByAuthorResponse, error) {
	out := new(QueryArticalByAuthorResponse)
	err := c.cc.Invoke(ctx, ArticalService_QueryArticalByAuthor_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) QueryArticalEx(ctx context.Context, in *QueryArticalRequest, opts ...grpc.CallOption) (*QueryArticalResponse, error) {
	out := new(QueryArticalResponse)
	err := c.cc.Invoke(ctx, ArticalService_QueryArticalEx_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) CreateLikeStar(ctx context.Context, in *CreateLikeStarRequest, opts ...grpc.CallOption) (*CreateLikeStarResponse, error) {
	out := new(CreateLikeStarResponse)
	err := c.cc.Invoke(ctx, ArticalService_CreateLikeStar_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) DeleteLikeStar(ctx context.Context, in *DeleteLikeStarRequest, opts ...grpc.CallOption) (*DeleteLikeStarResponse, error) {
	out := new(DeleteLikeStarResponse)
	err := c.cc.Invoke(ctx, ArticalService_DeleteLikeStar_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) QueryLikeStar(ctx context.Context, in *QueryLikeStarRequest, opts ...grpc.CallOption) (*QueryLikeStarResponse, error) {
	out := new(QueryLikeStarResponse)
	err := c.cc.Invoke(ctx, ArticalService_QueryLikeStar_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) QueryAllLikeStar(ctx context.Context, in *QueryAllLikeStarRequest, opts ...grpc.CallOption) (*QueryAllLikeStarResponse, error) {
	out := new(QueryAllLikeStarResponse)
	err := c.cc.Invoke(ctx, ArticalService_QueryAllLikeStar_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) CreateStar(ctx context.Context, in *CreateStarRequest, opts ...grpc.CallOption) (*CreateStarResponse, error) {
	out := new(CreateStarResponse)
	err := c.cc.Invoke(ctx, ArticalService_CreateStar_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) CreateStarFolder(ctx context.Context, in *CreateStarFolderRequest, opts ...grpc.CallOption) (*CreateStarFolderResponse, error) {
	out := new(CreateStarFolderResponse)
	err := c.cc.Invoke(ctx, ArticalService_CreateStarFolder_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) DeleteStarFolder(ctx context.Context, in *DeleteStarFolderRequest, opts ...grpc.CallOption) (*DeleteStarFolderResponse, error) {
	out := new(DeleteStarFolderResponse)
	err := c.cc.Invoke(ctx, ArticalService_DeleteStarFolder_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) DeleteStarFolderAndMove(ctx context.Context, in *DeleteStarFolderAndMoveRequest, opts ...grpc.CallOption) (*DeleteStarFolderAndMoveResponse, error) {
	out := new(DeleteStarFolderAndMoveResponse)
	err := c.cc.Invoke(ctx, ArticalService_DeleteStarFolderAndMove_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) UpdateStarFolder(ctx context.Context, in *UpdateStarFolderRequest, opts ...grpc.CallOption) (*UpdateStarFolderResponse, error) {
	out := new(UpdateStarFolderResponse)
	err := c.cc.Invoke(ctx, ArticalService_UpdateStarFolder_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) QueryStarFolder(ctx context.Context, in *QueryStarFolderRequest, opts ...grpc.CallOption) (*QueryStarFolderResponse, error) {
	out := new(QueryStarFolderResponse)
	err := c.cc.Invoke(ctx, ArticalService_QueryStarFolder_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) QueryAllStarFolder(ctx context.Context, in *QueryAllStarFolderRequest, opts ...grpc.CallOption) (*QueryAllStarFolderResponse, error) {
	out := new(QueryAllStarFolderResponse)
	err := c.cc.Invoke(ctx, ArticalService_QueryAllStarFolder_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) QueryAllStar(ctx context.Context, in *QueryAllStarRequest, opts ...grpc.CallOption) (*QueryAllStarResponse, error) {
	out := new(QueryAllStarResponse)
	err := c.cc.Invoke(ctx, ArticalService_QueryAllStar_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) UpdateStarOwner(ctx context.Context, in *UpdateStarOwnerRequest, opts ...grpc.CallOption) (*UpdateStarOwnerResponse, error) {
	out := new(UpdateStarOwnerResponse)
	err := c.cc.Invoke(ctx, ArticalService_UpdateStarOwner_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) RdbSetArtical(ctx context.Context, in *RdbSetArticalRequest, opts ...grpc.CallOption) (*RdbSetArticalResponse, error) {
	out := new(RdbSetArticalResponse)
	err := c.cc.Invoke(ctx, ArticalService_RdbSetArtical_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) RdbDelArtical(ctx context.Context, in *RdbDelArticalRequest, opts ...grpc.CallOption) (*RdbDelArticalResponse, error) {
	out := new(RdbDelArticalResponse)
	err := c.cc.Invoke(ctx, ArticalService_RdbDelArtical_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) RdbGetArtical(ctx context.Context, in *RdbGetArticalRequest, opts ...grpc.CallOption) (*RdbGetArticalResponse, error) {
	out := new(RdbGetArticalResponse)
	err := c.cc.Invoke(ctx, ArticalService_RdbGetArtical_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) RdbGetArticalEx(ctx context.Context, in *RdbGetArticalRequest, opts ...grpc.CallOption) (*RdbGetArticalResponse, error) {
	out := new(RdbGetArticalResponse)
	err := c.cc.Invoke(ctx, ArticalService_RdbGetArticalEx_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *articalServiceClient) RdbIncreaseitf(ctx context.Context, in *RdbIncreaseitfRequest, opts ...grpc.CallOption) (*RdbIncreaseitfResponse, error) {
	out := new(RdbIncreaseitfResponse)
	err := c.cc.Invoke(ctx, ArticalService_RdbIncreaseitf_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArticalServiceServer is the server API for ArticalService service.
// All implementations must embed UnimplementedArticalServiceServer
// for forward compatibility
type ArticalServiceServer interface {
	CreateArtical(context.Context, *CreateArticalRequest) (*CreateArticalResponse, error)
	DeleteArtical(context.Context, *DeleteArticalRequest) (*DeleteArticalResponse, error)
	UpdateArtical(context.Context, *UpdateArticalRequest) (*UpdateArticalResponse, error)
	QueryArtical(context.Context, *QueryArticalRequest) (*QueryArticalResponse, error)
	QueryArticalByAuthor(context.Context, *QueryArticalByAuthorRequest) (*QueryArticalByAuthorResponse, error)
	QueryArticalEx(context.Context, *QueryArticalRequest) (*QueryArticalResponse, error)
	CreateLikeStar(context.Context, *CreateLikeStarRequest) (*CreateLikeStarResponse, error)
	DeleteLikeStar(context.Context, *DeleteLikeStarRequest) (*DeleteLikeStarResponse, error)
	QueryLikeStar(context.Context, *QueryLikeStarRequest) (*QueryLikeStarResponse, error)
	QueryAllLikeStar(context.Context, *QueryAllLikeStarRequest) (*QueryAllLikeStarResponse, error)
	CreateStar(context.Context, *CreateStarRequest) (*CreateStarResponse, error)
	CreateStarFolder(context.Context, *CreateStarFolderRequest) (*CreateStarFolderResponse, error)
	DeleteStarFolder(context.Context, *DeleteStarFolderRequest) (*DeleteStarFolderResponse, error)
	DeleteStarFolderAndMove(context.Context, *DeleteStarFolderAndMoveRequest) (*DeleteStarFolderAndMoveResponse, error)
	UpdateStarFolder(context.Context, *UpdateStarFolderRequest) (*UpdateStarFolderResponse, error)
	QueryStarFolder(context.Context, *QueryStarFolderRequest) (*QueryStarFolderResponse, error)
	QueryAllStarFolder(context.Context, *QueryAllStarFolderRequest) (*QueryAllStarFolderResponse, error)
	QueryAllStar(context.Context, *QueryAllStarRequest) (*QueryAllStarResponse, error)
	UpdateStarOwner(context.Context, *UpdateStarOwnerRequest) (*UpdateStarOwnerResponse, error)
	RdbSetArtical(context.Context, *RdbSetArticalRequest) (*RdbSetArticalResponse, error)
	RdbDelArtical(context.Context, *RdbDelArticalRequest) (*RdbDelArticalResponse, error)
	RdbGetArtical(context.Context, *RdbGetArticalRequest) (*RdbGetArticalResponse, error)
	RdbGetArticalEx(context.Context, *RdbGetArticalRequest) (*RdbGetArticalResponse, error)
	RdbIncreaseitf(context.Context, *RdbIncreaseitfRequest) (*RdbIncreaseitfResponse, error)
	mustEmbedUnimplementedArticalServiceServer()
}

// UnimplementedArticalServiceServer must be embedded to have forward compatible implementations.
type UnimplementedArticalServiceServer struct {
}

func (UnimplementedArticalServiceServer) CreateArtical(context.Context, *CreateArticalRequest) (*CreateArticalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateArtical not implemented")
}
func (UnimplementedArticalServiceServer) DeleteArtical(context.Context, *DeleteArticalRequest) (*DeleteArticalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteArtical not implemented")
}
func (UnimplementedArticalServiceServer) UpdateArtical(context.Context, *UpdateArticalRequest) (*UpdateArticalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateArtical not implemented")
}
func (UnimplementedArticalServiceServer) QueryArtical(context.Context, *QueryArticalRequest) (*QueryArticalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryArtical not implemented")
}
func (UnimplementedArticalServiceServer) QueryArticalByAuthor(context.Context, *QueryArticalByAuthorRequest) (*QueryArticalByAuthorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryArticalByAuthor not implemented")
}
func (UnimplementedArticalServiceServer) QueryArticalEx(context.Context, *QueryArticalRequest) (*QueryArticalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryArticalEx not implemented")
}
func (UnimplementedArticalServiceServer) CreateLikeStar(context.Context, *CreateLikeStarRequest) (*CreateLikeStarResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLikeStar not implemented")
}
func (UnimplementedArticalServiceServer) DeleteLikeStar(context.Context, *DeleteLikeStarRequest) (*DeleteLikeStarResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLikeStar not implemented")
}
func (UnimplementedArticalServiceServer) QueryLikeStar(context.Context, *QueryLikeStarRequest) (*QueryLikeStarResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryLikeStar not implemented")
}
func (UnimplementedArticalServiceServer) QueryAllLikeStar(context.Context, *QueryAllLikeStarRequest) (*QueryAllLikeStarResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAllLikeStar not implemented")
}
func (UnimplementedArticalServiceServer) CreateStar(context.Context, *CreateStarRequest) (*CreateStarResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStar not implemented")
}
func (UnimplementedArticalServiceServer) CreateStarFolder(context.Context, *CreateStarFolderRequest) (*CreateStarFolderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStarFolder not implemented")
}
func (UnimplementedArticalServiceServer) DeleteStarFolder(context.Context, *DeleteStarFolderRequest) (*DeleteStarFolderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStarFolder not implemented")
}
func (UnimplementedArticalServiceServer) DeleteStarFolderAndMove(context.Context, *DeleteStarFolderAndMoveRequest) (*DeleteStarFolderAndMoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStarFolderAndMove not implemented")
}
func (UnimplementedArticalServiceServer) UpdateStarFolder(context.Context, *UpdateStarFolderRequest) (*UpdateStarFolderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStarFolder not implemented")
}
func (UnimplementedArticalServiceServer) QueryStarFolder(context.Context, *QueryStarFolderRequest) (*QueryStarFolderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryStarFolder not implemented")
}
func (UnimplementedArticalServiceServer) QueryAllStarFolder(context.Context, *QueryAllStarFolderRequest) (*QueryAllStarFolderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAllStarFolder not implemented")
}
func (UnimplementedArticalServiceServer) QueryAllStar(context.Context, *QueryAllStarRequest) (*QueryAllStarResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAllStar not implemented")
}
func (UnimplementedArticalServiceServer) UpdateStarOwner(context.Context, *UpdateStarOwnerRequest) (*UpdateStarOwnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStarOwner not implemented")
}
func (UnimplementedArticalServiceServer) RdbSetArtical(context.Context, *RdbSetArticalRequest) (*RdbSetArticalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RdbSetArtical not implemented")
}
func (UnimplementedArticalServiceServer) RdbDelArtical(context.Context, *RdbDelArticalRequest) (*RdbDelArticalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RdbDelArtical not implemented")
}
func (UnimplementedArticalServiceServer) RdbGetArtical(context.Context, *RdbGetArticalRequest) (*RdbGetArticalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RdbGetArtical not implemented")
}
func (UnimplementedArticalServiceServer) RdbGetArticalEx(context.Context, *RdbGetArticalRequest) (*RdbGetArticalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RdbGetArticalEx not implemented")
}
func (UnimplementedArticalServiceServer) RdbIncreaseitf(context.Context, *RdbIncreaseitfRequest) (*RdbIncreaseitfResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RdbIncreaseitf not implemented")
}
func (UnimplementedArticalServiceServer) mustEmbedUnimplementedArticalServiceServer() {}

// UnsafeArticalServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ArticalServiceServer will
// result in compilation errors.
type UnsafeArticalServiceServer interface {
	mustEmbedUnimplementedArticalServiceServer()
}

func RegisterArticalServiceServer(s grpc.ServiceRegistrar, srv ArticalServiceServer) {
	s.RegisterService(&ArticalService_ServiceDesc, srv)
}

func _ArticalService_CreateArtical_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateArticalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).CreateArtical(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_CreateArtical_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).CreateArtical(ctx, req.(*CreateArticalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_DeleteArtical_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteArticalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).DeleteArtical(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_DeleteArtical_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).DeleteArtical(ctx, req.(*DeleteArticalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_UpdateArtical_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateArticalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).UpdateArtical(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_UpdateArtical_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).UpdateArtical(ctx, req.(*UpdateArticalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_QueryArtical_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryArticalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).QueryArtical(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_QueryArtical_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).QueryArtical(ctx, req.(*QueryArticalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_QueryArticalByAuthor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryArticalByAuthorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).QueryArticalByAuthor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_QueryArticalByAuthor_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).QueryArticalByAuthor(ctx, req.(*QueryArticalByAuthorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_QueryArticalEx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryArticalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).QueryArticalEx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_QueryArticalEx_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).QueryArticalEx(ctx, req.(*QueryArticalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_CreateLikeStar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLikeStarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).CreateLikeStar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_CreateLikeStar_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).CreateLikeStar(ctx, req.(*CreateLikeStarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_DeleteLikeStar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLikeStarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).DeleteLikeStar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_DeleteLikeStar_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).DeleteLikeStar(ctx, req.(*DeleteLikeStarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_QueryLikeStar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryLikeStarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).QueryLikeStar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_QueryLikeStar_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).QueryLikeStar(ctx, req.(*QueryLikeStarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_QueryAllLikeStar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllLikeStarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).QueryAllLikeStar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_QueryAllLikeStar_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).QueryAllLikeStar(ctx, req.(*QueryAllLikeStarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_CreateStar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).CreateStar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_CreateStar_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).CreateStar(ctx, req.(*CreateStarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_CreateStarFolder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStarFolderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).CreateStarFolder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_CreateStarFolder_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).CreateStarFolder(ctx, req.(*CreateStarFolderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_DeleteStarFolder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStarFolderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).DeleteStarFolder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_DeleteStarFolder_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).DeleteStarFolder(ctx, req.(*DeleteStarFolderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_DeleteStarFolderAndMove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStarFolderAndMoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).DeleteStarFolderAndMove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_DeleteStarFolderAndMove_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).DeleteStarFolderAndMove(ctx, req.(*DeleteStarFolderAndMoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_UpdateStarFolder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStarFolderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).UpdateStarFolder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_UpdateStarFolder_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).UpdateStarFolder(ctx, req.(*UpdateStarFolderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_QueryStarFolder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryStarFolderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).QueryStarFolder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_QueryStarFolder_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).QueryStarFolder(ctx, req.(*QueryStarFolderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_QueryAllStarFolder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllStarFolderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).QueryAllStarFolder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_QueryAllStarFolder_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).QueryAllStarFolder(ctx, req.(*QueryAllStarFolderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_QueryAllStar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllStarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).QueryAllStar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_QueryAllStar_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).QueryAllStar(ctx, req.(*QueryAllStarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_UpdateStarOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStarOwnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).UpdateStarOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_UpdateStarOwner_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).UpdateStarOwner(ctx, req.(*UpdateStarOwnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_RdbSetArtical_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RdbSetArticalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).RdbSetArtical(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_RdbSetArtical_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).RdbSetArtical(ctx, req.(*RdbSetArticalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_RdbDelArtical_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RdbDelArticalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).RdbDelArtical(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_RdbDelArtical_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).RdbDelArtical(ctx, req.(*RdbDelArticalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_RdbGetArtical_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RdbGetArticalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).RdbGetArtical(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_RdbGetArtical_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).RdbGetArtical(ctx, req.(*RdbGetArticalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_RdbGetArticalEx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RdbGetArticalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).RdbGetArticalEx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_RdbGetArticalEx_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).RdbGetArticalEx(ctx, req.(*RdbGetArticalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ArticalService_RdbIncreaseitf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RdbIncreaseitfRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArticalServiceServer).RdbIncreaseitf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ArticalService_RdbIncreaseitf_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArticalServiceServer).RdbIncreaseitf(ctx, req.(*RdbIncreaseitfRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ArticalService_ServiceDesc is the grpc.ServiceDesc for ArticalService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ArticalService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "articaldemo.ArticalService",
	HandlerType: (*ArticalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateArtical",
			Handler:    _ArticalService_CreateArtical_Handler,
		},
		{
			MethodName: "DeleteArtical",
			Handler:    _ArticalService_DeleteArtical_Handler,
		},
		{
			MethodName: "UpdateArtical",
			Handler:    _ArticalService_UpdateArtical_Handler,
		},
		{
			MethodName: "QueryArtical",
			Handler:    _ArticalService_QueryArtical_Handler,
		},
		{
			MethodName: "QueryArticalByAuthor",
			Handler:    _ArticalService_QueryArticalByAuthor_Handler,
		},
		{
			MethodName: "QueryArticalEx",
			Handler:    _ArticalService_QueryArticalEx_Handler,
		},
		{
			MethodName: "CreateLikeStar",
			Handler:    _ArticalService_CreateLikeStar_Handler,
		},
		{
			MethodName: "DeleteLikeStar",
			Handler:    _ArticalService_DeleteLikeStar_Handler,
		},
		{
			MethodName: "QueryLikeStar",
			Handler:    _ArticalService_QueryLikeStar_Handler,
		},
		{
			MethodName: "QueryAllLikeStar",
			Handler:    _ArticalService_QueryAllLikeStar_Handler,
		},
		{
			MethodName: "CreateStar",
			Handler:    _ArticalService_CreateStar_Handler,
		},
		{
			MethodName: "CreateStarFolder",
			Handler:    _ArticalService_CreateStarFolder_Handler,
		},
		{
			MethodName: "DeleteStarFolder",
			Handler:    _ArticalService_DeleteStarFolder_Handler,
		},
		{
			MethodName: "DeleteStarFolderAndMove",
			Handler:    _ArticalService_DeleteStarFolderAndMove_Handler,
		},
		{
			MethodName: "UpdateStarFolder",
			Handler:    _ArticalService_UpdateStarFolder_Handler,
		},
		{
			MethodName: "QueryStarFolder",
			Handler:    _ArticalService_QueryStarFolder_Handler,
		},
		{
			MethodName: "QueryAllStarFolder",
			Handler:    _ArticalService_QueryAllStarFolder_Handler,
		},
		{
			MethodName: "QueryAllStar",
			Handler:    _ArticalService_QueryAllStar_Handler,
		},
		{
			MethodName: "UpdateStarOwner",
			Handler:    _ArticalService_UpdateStarOwner_Handler,
		},
		{
			MethodName: "RdbSetArtical",
			Handler:    _ArticalService_RdbSetArtical_Handler,
		},
		{
			MethodName: "RdbDelArtical",
			Handler:    _ArticalService_RdbDelArtical_Handler,
		},
		{
			MethodName: "RdbGetArtical",
			Handler:    _ArticalService_RdbGetArtical_Handler,
		},
		{
			MethodName: "RdbGetArticalEx",
			Handler:    _ArticalService_RdbGetArticalEx_Handler,
		},
		{
			MethodName: "RdbIncreaseitf",
			Handler:    _ArticalService_RdbIncreaseitf_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "artical.proto",
}
